diff -upk.orig nmap-4.01.orig/MACLookup.cc nmap-4.01/MACLookup.cc
--- nmap-4.01.orig/MACLookup.cc	2006-03-03 00:05:09 +0000
+++ nmap-4.01/MACLookup.cc	2006-03-03 00:05:26 +0000
@@ -105,6 +105,7 @@
 #include "MACLookup.h"
 #include "nmap.h"
 #include "nmap_error.h"
+#include "droppriv.h"
 
 struct MAC_entry {
   int prefix; /* -1 means none set */
@@ -128,7 +129,7 @@ static inline int MACTableHash(int prefi
   return prefix % table_capacity;
 }
 
-static void mac_prefix_init() {
+void mac_prefix_init() {
   static int initialized = 0;
   if (initialized) return;
   initialized = 1;
diff -upk.orig nmap-4.01.orig/Makefile.in nmap-4.01/Makefile.in
--- nmap-4.01.orig/Makefile.in	2006-02-10 02:22:27 +0000
+++ nmap-4.01/Makefile.in	2006-03-03 00:05:26 +0000
@@ -46,11 +46,11 @@ TARGET = nmap
 TARGETNMAPFE=@TARGETNMAPFE@
 INSTALLNMAPFE=@INSTALLNMAPFE@
 
-export SRCS = main.cc nmap.cc targets.cc tcpip.cc nmap_error.cc utils.cc idle_scan.cc osscan.cc output.cc scan_engine.cc timing.cc charpool.cc services.cc protocols.cc nmap_rpc.cc portlist.cc NmapOps.cc TargetGroup.cc Target.cc FingerPrintResults.cc service_scan.cc NmapOutputTable.cc MACLookup.cc tty.cc nmap_dns.cc @COMPAT_SRCS@
+export SRCS = main.cc nmap.cc targets.cc tcpip.cc nmap_error.cc utils.cc idle_scan.cc osscan.cc output.cc scan_engine.cc timing.cc charpool.cc services.cc protocols.cc nmap_rpc.cc portlist.cc droppriv.cc NmapOps.cc TargetGroup.cc Target.cc FingerPrintResults.cc service_scan.cc NmapOutputTable.cc MACLookup.cc tty.cc nmap_dns.cc @COMPAT_SRCS@
 
-OBJS = main.o nmap.o targets.o tcpip.o nmap_error.o utils.o idle_scan.o osscan.o output.o scan_engine.o timing.o charpool.o services.o protocols.o nmap_rpc.o portlist.o NmapOps.o TargetGroup.o Target.o FingerPrintResults.o service_scan.o NmapOutputTable.o MACLookup.o tty.o nmap_dns.o @COMPAT_OBJS@
+OBJS = main.o nmap.o targets.o tcpip.o nmap_error.o utils.o idle_scan.o osscan.o output.o scan_engine.o timing.o charpool.o services.o protocols.o nmap_rpc.o portlist.o droppriv.o NmapOps.o TargetGroup.o Target.o FingerPrintResults.o service_scan.o NmapOutputTable.o MACLookup.o tty.o nmap_dns.o @COMPAT_OBJS@
 
-export DEPS = nmap.h nmap_amigaos.h nmap_error.h targets.h idle_scan.h osscan.h output.h scan_engine.h timing.h tcpip.h utils.h global_structures.h charpool.h services.h protocols.h nmap_rpc.h portlist.h NmapOps.h TargetGroup.h Target.h FingerPrintResults.h service_scan.h NmapOutputTable.h MACLookup.h tty.h nmap_dns.h
+export DEPS = nmap.h nmap_amigaos.h nmap_error.h targets.h idle_scan.h osscan.h output.h scan_engine.h timing.h tcpip.h utils.h global_structures.h charpool.h services.h protocols.h nmap_rpc.h portlist.h droppriv.h NmapOps.h TargetGroup.h Target.h FingerPrintResults.h service_scan.h NmapOutputTable.h MACLookup.h tty.h nmap_dns.h
 
 
 # %.o : %.cc -- nope this is a GNU extension
diff -upk.orig nmap-4.01.orig/configure.ac nmap-4.01/configure.ac
--- nmap-4.01.orig/configure.ac	2006-03-03 00:05:09 +0000
+++ nmap-4.01/configure.ac	2006-03-03 00:05:26 +0000
@@ -648,6 +648,7 @@ if test $ac_cv_ip_has_ip_sum = yes ; the
         AC_DEFINE(HAVE_IP_IP_SUM, 1, [Define to 1 for ip_sum member])
 fi
 
+AC_CHECK_LIB(cap, cap_from_text)
 
 dnl Checks for library functions.
 dnl AC_TYPE_SIGNAL
diff -upk.orig nmap-4.01.orig/droppriv.cc nmap-4.01/droppriv.cc
--- nmap-4.01.orig/droppriv.cc	1970-01-01 00:00:00 +0000
+++ nmap-4.01/droppriv.cc	2006-03-03 00:05:26 +0000
@@ -0,0 +1,71 @@
+#include <stdlib.h>
+#include <unistd.h>
+#include <pwd.h>
+#include <grp.h>
+#include <sys/capability.h>
+#include <sys/prctl.h>
+
+#include "nmap.h"
+#include "droppriv.h"
+#include "NmapOps.h"
+
+#define NMAP_USER "nmapuser"
+#define NMAP_CHROOT_EMPTY "/var/empty"
+#define NMAP_CHROOT_RESOLV "/var/resolv"
+
+extern NmapOps o;		/* option structure */
+
+void
+drop_priv(void)
+{
+	const char *user = NMAP_USER;
+	const char *dir;
+	struct passwd *pw;
+	cap_t   caps;
+
+	if (geteuid())
+		return;
+
+	nmap_services_init();
+	nmap_protocols_init();
+	rpc_services_init();
+	service_scan_init();
+	routethrough_init();
+	mac_prefix_init();
+	if (!o.noresolve) etchosts_init();
+
+	if (setgroups(0, 0) < 0)
+		fatal("setgroups failed");
+
+	if (prctl(PR_SET_KEEPCAPS, 1))
+		fatal("prctl PR_SET_KEEPCAPS failed");
+
+	if (!(pw = getpwnam(user)))
+		fatal("lookup of user \"%s\" failed", user);
+	endpwent();
+
+	if (!pw->pw_uid)
+		fatal("user \"%s\" shouldn't be root", user);
+
+	dir = o.noresolve ? NMAP_CHROOT_EMPTY : NMAP_CHROOT_RESOLV;
+	if (dir && (chroot(dir) || chdir("/")))
+		fatal("chroot to \"%s\" failed", dir);
+
+	if (setgid(pw->pw_gid) < 0)
+		fatal("setgid failed");
+
+	if (seteuid(pw->pw_uid) < 0)
+		fatal("seteuid failed");
+
+	caps = cap_from_text("cap_net_raw=ep");
+	if (!caps)
+		fatal("cap_from_text failed");
+
+	if (cap_set_proc(caps) < 0)
+		fatal("cap_set_proc failed");
+
+	cap_free(caps);
+
+	if (setreuid(pw->pw_uid, pw->pw_uid) < 0)
+		fatal("setreuid failed");
+}
diff -upk.orig nmap-4.01.orig/droppriv.h nmap-4.01/droppriv.h
--- nmap-4.01.orig/droppriv.h	1970-01-01 00:00:00 +0000
+++ nmap-4.01/droppriv.h	2006-03-03 00:05:26 +0000
@@ -0,0 +1,16 @@
+#ifndef NMAP_DROPPRIV_H__
+#define NMAP_DROPPRIV_H__
+
+class AllProbes;
+
+extern void drop_priv(void);
+extern int nmap_services_init(void);
+extern int nmap_protocols_init(void);
+extern void rpc_services_init(void);
+extern AllProbes *service_scan_init(void);
+extern void routethrough_init(void);
+extern void mac_prefix_init(void);
+extern void etchosts_init(void);
+
+#endif /* NMAP_DROPPRIV_H__ */
+
diff -upk.orig nmap-4.01.orig/nmap.cc nmap-4.01/nmap.cc
--- nmap-4.01.orig/nmap.cc	2006-02-07 07:15:37 +0000
+++ nmap-4.01/nmap.cc	2006-03-03 00:05:26 +0000
@@ -105,6 +105,7 @@
 #include "scan_engine.h"
 #include "idle_scan.h"
 #include "timing.h"
+#include "droppriv.h"
 #include "NmapOps.h"
 #include "MACLookup.h"
 #include "tty.h"
@@ -928,6 +929,8 @@ int nmap_main(int argc, char *argv[]) {
       o.sendpref = PACKET_SEND_ETH_STRONG;
   }
 
+  drop_priv();
+
   if (!ports) {
     if (o.ipprotscan) {
       ports = getdefaultprots();
diff -upk.orig nmap-4.01.orig/nmap_dns.cc nmap-4.01/nmap_dns.cc
--- nmap-4.01.orig/nmap_dns.cc	2006-03-03 00:05:09 +0000
+++ nmap-4.01/nmap_dns.cc	2006-03-03 00:05:50 +0000
@@ -1002,7 +1002,7 @@ char *lookup_etchosts(u32 ip) {
 }
 
 
-static void etchosts_init(void) {
+void etchosts_init(void) {
   static int initialized = 0;
   if (initialized) return;
   initialized = 1;
diff -upk.orig nmap-4.01.orig/nmap_rpc.cc nmap-4.01/nmap_rpc.cc
--- nmap-4.01.orig/nmap_rpc.cc	2006-03-03 00:05:09 +0000
+++ nmap-4.01/nmap_rpc.cc	2006-03-03 00:05:26 +0000
@@ -103,6 +103,7 @@
 
 
 #include "nmap_rpc.h"
+#include "droppriv.h"
 #include "NmapOps.h"
 
 extern NmapOps o;
@@ -117,7 +118,7 @@ static unsigned long rpc_xid_base = (uns
 static size_t tcp_readlen=0; /* used in get_rpc_results but can be reset in 
 			    send_rpc_query */
 
-static void rpc_services_init() {
+void rpc_services_init() {
   static int services_initialized = 0;
   if (services_initialized) return;
   services_initialized = 1;
diff -upk.orig nmap-4.01.orig/protocols.cc nmap-4.01/protocols.cc
--- nmap-4.01.orig/protocols.cc	2006-03-03 00:05:09 +0000
+++ nmap-4.01/protocols.cc	2006-03-03 00:05:26 +0000
@@ -100,13 +100,14 @@
 /* $Id: protocols.cc 2396 2004-08-29 09:12:05Z fyodor $ */
 
 #include "protocols.h"
+#include "droppriv.h"
 #include "NmapOps.h"
 
 extern NmapOps o;
 static int numipprots = 0;
 static struct protocol_list *protocol_table[PROTOCOL_TABLE_SIZE];
 
-static int nmap_protocols_init() {
+int nmap_protocols_init() {
   static int protocols_initialized = 0;
   if (protocols_initialized) return 0;
 
diff -upk.orig nmap-4.01.orig/service_scan.cc nmap-4.01/service_scan.cc
--- nmap-4.01.orig/service_scan.cc	2006-03-03 00:05:09 +0000
+++ nmap-4.01/service_scan.cc	2006-03-03 00:05:26 +0000
@@ -105,6 +105,7 @@
 #include "timing.h"
 #include "NmapOps.h"
 #include "nsock.h"
+#include "droppriv.h"
 
 #include "tty.h"
 
@@ -1137,7 +1138,7 @@ static void parse_nmap_service_probes(Al
   parse_nmap_service_probe_file(AP, filename);
 }
 
-static AllProbes *service_scan_init(void)
+AllProbes *service_scan_init(void)
 {
   static AllProbes *AP;
 
diff -upk.orig nmap-4.01.orig/services.cc nmap-4.01/services.cc
--- nmap-4.01.orig/services.cc	2006-03-03 00:05:09 +0000
+++ nmap-4.01/services.cc	2006-03-03 00:05:26 +0000
@@ -100,6 +100,7 @@
 /* $Id: services.cc 2396 2004-08-29 09:12:05Z fyodor $ */
 
 #include "services.h"
+#include "droppriv.h"
 #include "NmapOps.h"
 
 extern NmapOps o;
@@ -107,7 +108,7 @@ static int numtcpports = 0;
 static int numudpports = 0;
 static struct service_list *service_table[SERVICE_TABLE_SIZE];
 
-static int nmap_services_init() {
+int nmap_services_init() {
   static int services_initialized = 0;
   if (services_initialized) return 0;
 
diff -upk.orig nmap-4.01.orig/tcpip.cc nmap-4.01/tcpip.cc
--- nmap-4.01.orig/tcpip.cc	2006-02-07 07:15:37 +0000
+++ nmap-4.01/tcpip.cc	2006-03-03 00:05:26 +0000
@@ -102,6 +102,7 @@
 
 #include <dnet.h>
 #include "tcpip.h"
+#include "droppriv.h"
 #include "NmapOps.h"
 
 #if HAVE_SYS_TIME_H
@@ -2027,6 +2028,14 @@ void set_pcap_filter(const char *device,
     fatal("Failed to set the pcap filter: %s\n", pcap_geterr(pd));
 }
 
+static FILE *routefp;
+
+void routethrough_init(void)
+{
+  if (!routefp)
+     routefp = fopen("/proc/net/route", "r");
+}
+
 /* The 'dev' passed in must be at least 32 bytes long */
 int ipaddr2devname( char *dev, const struct in_addr *addr ) {
 struct interface_info *mydevs;
@@ -2403,7 +2412,6 @@ struct sys_route *getsysroutes(int *howm
   int route_capacity = 128;
   static struct sys_route *routes = NULL;
   static int numroutes = 0;
-  FILE *routefp;
   char buf[1024];
   char iface[16];
   char *p, *endptr;
@@ -2418,7 +2426,7 @@ struct sys_route *getsysroutes(int *howm
     routes = (struct sys_route *) safe_zalloc(route_capacity * sizeof(struct sys_route));
     ifaces = getinterfaces(&numifaces);
     /* First let us try Linux-style /proc/net/route */
-    routefp = fopen("/proc/net/route", "r");
+    routethrough_init();
     if (routefp) {
       fgets(buf, sizeof(buf), routefp); /* Kill the first line (column headers) */
       while(fgets(buf,sizeof(buf), routefp)) {
@@ -2501,6 +2509,8 @@ struct sys_route *getsysroutes(int *howm
 	  routes = (struct sys_route *) realloc(routes, route_capacity * sizeof(struct sys_route));
 	}
       }
+    fclose(routefp);
+    routefp = NULL;
     } else {
       struct dnet_collector_route_nfo dcrn;
       dcrn.routes = routes;

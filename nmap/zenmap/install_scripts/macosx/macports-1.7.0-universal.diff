diff --unidirectional-new-file -ru -x PortIndex ports.orig/devel/glib2/Portfile ports/devel/glib2/Portfile
--- ports.orig/devel/glib2/Portfile	2008-04-12 21:22:52.000000000 -0600
+++ ports/devel/glib2/Portfile	2008-05-02 11:48:01.000000000 -0600
@@ -33,7 +33,8 @@
 patchfiles \
     patch-glib-2.0.pc.in.diff \
     patch-gutils.c.diff \
-    patch-gi18n.h.diff
+    patch-gi18n.h.diff \
+    patch-configure.diff
 
 depends_build \
     port:pkgconfig
diff --unidirectional-new-file -ru -x PortIndex ports.orig/devel/glib2/files/patch-configure.diff ports/devel/glib2/files/patch-configure.diff
--- ports.orig/devel/glib2/files/patch-configure.diff	1969-12-31 17:00:00.000000000 -0700
+++ ports/devel/glib2/files/patch-configure.diff	2008-05-02 11:53:38.000000000 -0600
@@ -0,0 +1,152 @@
+Patch glib configure to defer some decisions to run time rather than
+configure time, using the __ppc__ macro. Otherwise, for example, there
+will be just one definition for G_BYTE_ORDER, either G_BIG_ENDIAN or
+G_LITTLE_ENDIAN, which can't be correct for both Intel and PowerPC
+computers.
+
+This patch is basically the same as one provided by the Inkscape
+project. It was downloaded from the Subversion repository at
+https://inkscape.svn.sourceforge.net/svnroot/inkscape/experimental/trunk/mjwybrow/ports/devel/glib2/files/patch-configure.diff
+--- configure.orig	2008-04-07 21:51:40.000000000 -0600
++++ configure	2008-05-02 11:38:37.000000000 -0600
+@@ -31158,23 +31158,12 @@
+ fi
+ { echo "$as_me:$LINENO: result: $ac_cv_c_bigendian" >&5
+ echo "${ECHO_T}$ac_cv_c_bigendian" >&6; }
+-case $ac_cv_c_bigendian in
+-  yes)
+ 
+ cat >>confdefs.h <<\_ACEOF
++#ifdef __ppc__
+ #define WORDS_BIGENDIAN 1
++#endif
+ _ACEOF
+- ;;
+-  no)
+-     ;;
+-  *)
+-    { { echo "$as_me:$LINENO: error: unknown endianness
+-presetting ac_cv_c_bigendian=no (or yes) will help" >&5
+-echo "$as_me: error: unknown endianness
+-presetting ac_cv_c_bigendian=no (or yes) will help" >&2;}
+-   { (exit 1); exit 1; }; } ;;
+-esac
+-
+ 
+ # check for header files
+ 
+@@ -41725,7 +41714,11 @@
+ echo "${ECHO_T}$glib_cv_byte_contents_gmutex" >&6; }
+ 
+ cat >>confdefs.h <<_ACEOF
+-#define GLIB_BYTE_CONTENTS_GMUTEX $glib_cv_byte_contents_gmutex
++#ifdef __ppc__
++#define GLIB_BYTE_CONTENTS_GMUTEX 50,-86,-85,-89,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
++#else
++#define GLIB_BYTE_CONTENTS_GMUTEX -89,-85,-86,50,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
++#endif
+ _ACEOF
+ 
+ 
+@@ -47282,11 +47275,13 @@
+ _______EOF
+ 	fi
+ 
+-	case x$g_stack_grows in
+-	xyes) echo "#define G_HAVE_GROWING_STACK 1" >>$outfile ;;
+-	*)    echo "#define G_HAVE_GROWING_STACK 0" >>$outfile ;;
+-	esac
+-
++	cat >>$outfile <<_______EOF
++#ifdef __ppc__
++#define G_HAVE_GROWING_STACK 1
++#else
++#define G_HAVE_GROWING_STACK 0
++#endif
++_______EOF
+ 
+ 	echo >>$outfile
+ 	if test x$g_have_eilseq = xno; then
+@@ -47334,7 +47329,11 @@
+     long   dummy_long;
+   } static_mutex;
+ };
+-#define	G_STATIC_MUTEX_INIT	{ NULL, { { $g_mutex_contents} } }
++#ifdef __ppc__
++#define G_STATIC_MUTEX_INIT     { NULL, { { 50,-86,-85,-89,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0} } }
++#else           
++#define G_STATIC_MUTEX_INIT     { NULL, { { -89,-85,-86,50,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0} } }
++#endif
+ #ifdef __cplusplus
+ #define	g_static_mutex_get_mutex(mutex) \\
+   (g_thread_use_default_impl ? ((GMutex*) ((mutex)->static_mutex.pad)) : \\
+@@ -47369,24 +47368,39 @@
+   void  *dummy_pointer;
+   long   dummy_long;
+ };
+-_______EOF
+-	if test x"$g_memory_barrier_needed" != xno; then
+-	  echo >>$outfile
+-	  echo "#define G_ATOMIC_OP_MEMORY_BARRIER_NEEDED 1" >>$outfile
+-	fi
++#ifdef __ppc__
++#define G_ATOMIC_OP_MEMORY_BARRIER_NEEDED 1
+ 
+-	echo >>$outfile
+-	g_bit_sizes="16 32 64"
+-	for bits in $g_bit_sizes; do
+-	  cat >>$outfile <<_______EOF
+-#define GINT${bits}_TO_${g_bs_native}(val)	((gint${bits}) (val))
+-#define GUINT${bits}_TO_${g_bs_native}(val)	((guint${bits}) (val))
+-#define GINT${bits}_TO_${g_bs_alien}(val)	((gint${bits}) GUINT${bits}_SWAP_LE_BE (val))
+-#define GUINT${bits}_TO_${g_bs_alien}(val)	(GUINT${bits}_SWAP_LE_BE (val))
+-_______EOF
+-	done
++#define GINT16_TO_BE(val)	((gint16) (val))
++#define GUINT16_TO_BE(val)	((guint16) (val))
++#define GINT16_TO_LE(val)	((gint16) GUINT16_SWAP_LE_BE (val))
++#define GUINT16_TO_LE(val)	(GUINT16_SWAP_LE_BE (val))
++#define GINT32_TO_BE(val)	((gint32) (val))
++#define GUINT32_TO_BE(val)	((guint32) (val))
++#define GINT32_TO_LE(val)	((gint32) GUINT32_SWAP_LE_BE (val))
++#define GUINT32_TO_LE(val)	(GUINT32_SWAP_LE_BE (val))
++#define GINT64_TO_BE(val)	((gint64) (val))
++#define GUINT64_TO_BE(val)	((guint64) (val))
++#define GINT64_TO_LE(val)	((gint64) GUINT64_SWAP_LE_BE (val))
++#define GUINT64_TO_LE(val)	(GUINT64_SWAP_LE_BE (val))
++
++#else
++
++#define GINT16_TO_LE(val)	((gint16) (val))
++#define GUINT16_TO_LE(val)	((guint16) (val))
++#define GINT16_TO_BE(val)	((gint16) GUINT16_SWAP_LE_BE (val))
++#define GUINT16_TO_BE(val)	(GUINT16_SWAP_LE_BE (val))
++#define GINT32_TO_LE(val)	((gint32) (val))
++#define GUINT32_TO_LE(val)	((guint32) (val))
++#define GINT32_TO_BE(val)	((gint32) GUINT32_SWAP_LE_BE (val))
++#define GUINT32_TO_BE(val)	(GUINT32_SWAP_LE_BE (val))
++#define GINT64_TO_LE(val)	((gint64) (val))
++#define GUINT64_TO_LE(val)	((guint64) (val))
++#define GINT64_TO_BE(val)	((gint64) GUINT64_SWAP_LE_BE (val))
++#define GUINT64_TO_BE(val)	(GUINT64_SWAP_LE_BE (val))
++
++#endif
+ 
+-	cat >>$outfile <<_______EOF
+ #define GLONG_TO_LE(val)	((glong) GINT${glongbits}_TO_LE (val))
+ #define GULONG_TO_LE(val)	((gulong) GUINT${glongbits}_TO_LE (val))
+ #define GLONG_TO_BE(val)	((glong) GINT${glongbits}_TO_BE (val))
+@@ -47395,7 +47409,12 @@
+ #define GUINT_TO_LE(val)	((guint) GUINT${gintbits}_TO_LE (val))
+ #define GINT_TO_BE(val)		((gint) GINT${gintbits}_TO_BE (val))
+ #define GUINT_TO_BE(val)	((guint) GUINT${gintbits}_TO_BE (val))
+-#define G_BYTE_ORDER $g_byte_order
++
++#ifdef __ppc__
++#define G_BYTE_ORDER G_BIG_ENDIAN
++#else
++#define G_BYTE_ORDER G_LITTLE_ENDIAN
++#endif
+ 
+ #define GLIB_SYSDEF_POLLIN =$g_pollin
+ #define GLIB_SYSDEF_POLLOUT =$g_pollout
diff --unidirectional-new-file -ru -x PortIndex ports.orig/lang/python25/files/patch-Makefile.pre.in.diff ports/lang/python25/files/patch-Makefile.pre.in.diff
--- ports.orig/lang/python25/files/patch-Makefile.pre.in.diff	2008-02-22 16:26:05.000000000 -0700
+++ ports/lang/python25/files/patch-Makefile.pre.in.diff	2008-04-07 12:30:30.000000000 -0600
@@ -1,6 +1,6 @@
---- Makefile.pre.in.orig	2007-09-29 02:15:52.000000000 +0200
-+++ Makefile.pre.in	2007-09-29 02:18:57.000000000 +0200
-@@ -373,6 +373,13 @@
+--- Makefile.pre.in.orig	2007-12-05 13:43:57.000000000 -0700
++++ Makefile.pre.in	2008-04-07 09:13:58.000000000 -0600
+@@ -376,6 +376,13 @@
  libpython$(VERSION).sl: $(LIBRARY_OBJS)
  	$(LDSHARED) -o $@ $(LIBRARY_OBJS) $(SHLIBS) $(LIBC) $(LIBM)
  
@@ -9,12 +9,12 @@
 +		-all_load $(LIBRARY) -single_module \
 +		-install_name $(LIBDIR)/$@ \
 +		-compatibility_version $(VERSION) \
-+		-current_version $(VERSION) -lSystem -lSystemStubs $(LDFLAGS)
++		-current_version $(VERSION) -lSystem -lSystemStubs
 +
  # This rule is here for OPENSTEP/Rhapsody/MacOSX. It builds a temporary
  # minimal framework (not including the Lib directory and such) in the current
  # directory.
-@@ -675,6 +682,9 @@
+@@ -684,6 +691,9 @@
  			fi \
  		fi; \
  	else	true; \
diff --unidirectional-new-file -ru -x PortIndex ports.orig/python/py25-hashlib/Portfile ports/python/py25-hashlib/Portfile
--- ports.orig/python/py25-hashlib/Portfile	2008-02-22 16:37:41.000000000 -0700
+++ ports/python/py25-hashlib/Portfile	2008-04-07 12:29:21.000000000 -0600
@@ -21,6 +21,8 @@
 
 depends_lib-append	port:openssl
 
+universal_variant	no
+
 worksrcdir		${worksrcdir}/Modules
 
 extract.post_args	"| tar -xf - ${distname}/Modules/_hashopenssl.c"
diff --unidirectional-new-file -ru -x PortIndex ports.orig/python/py25-libxml2/Portfile ports/python/py25-libxml2/Portfile
--- ports.orig/python/py25-libxml2/Portfile	2007-10-11 07:36:52.000000000 -0600
+++ ports/python/py25-libxml2/Portfile	2008-04-07 12:29:27.000000000 -0600
@@ -28,6 +28,8 @@
 
 build.env               LDFLAGS=-L${prefix}/lib
 
+universal_variant	no
+
 post-patch {
   reinplace "s|@PREFIX@|$prefix|" ${worksrcpath}/setup.py
 }
diff --unidirectional-new-file -ru -x PortIndex ports.orig/python/py25-numeric/Portfile ports/python/py25-numeric/Portfile
--- ports.orig/python/py25-numeric/Portfile	2007-11-22 03:04:31.000000000 -0700
+++ ports/python/py25-numeric/Portfile	2008-04-07 12:29:30.000000000 -0600
@@ -27,6 +27,8 @@
 
 patchfiles      patch-ranf.c
 
+universal_variant	no
+
 platform macosx {
     post-patch {
         copy -force ${filespath}/customize.py-macosx ${worksrcpath}/customize.py
diff --unidirectional-new-file -ru -x PortIndex ports.orig/python/py25-numpy/Portfile ports/python/py25-numpy/Portfile
--- ports.orig/python/py25-numpy/Portfile	2008-03-11 12:55:11.000000000 -0600
+++ ports/python/py25-numpy/Portfile	2008-04-07 12:29:34.000000000 -0600
@@ -26,6 +26,8 @@
 depends_lib-append      port:fftw-3 \
                         port:py25-hashlib
 
+universal_variant	no
+
 post-patch {
   reinplace "s|@@MPORTS_PREFIX@@|${prefix}|" ${worksrcpath}/numpy/distutils/fcompiler/g95.py
 }
diff --unidirectional-new-file -ru -x PortIndex ports.orig/python/py25-sqlite3/Portfile ports/python/py25-sqlite3/Portfile
--- ports.orig/python/py25-sqlite3/Portfile	2008-02-22 16:37:41.000000000 -0700
+++ ports/python/py25-sqlite3/Portfile	2008-05-01 09:34:52.000000000 -0600
@@ -18,6 +18,8 @@
 checksums		sha1 4755d212f50af704c20224a6966e23acc5aea60f
 use_bzip2		yes
 
+universal_variant	no
+
 worksrcdir		${worksrcdir}/Modules
 
 extract.post_args	"| tar -xf - ${distname}/Modules/_sqlite"
diff --unidirectional-new-file -ru -x PortIndex ports.orig/python/py25-zlib/Portfile ports/python/py25-zlib/Portfile
--- ports.orig/python/py25-zlib/Portfile	2008-02-22 16:37:41.000000000 -0700
+++ ports/python/py25-zlib/Portfile	2008-04-07 12:29:41.000000000 -0600
@@ -20,6 +20,8 @@
 
 worksrcdir		${worksrcdir}/Modules
 
+universal_variant	no
+
 extract.post_args	"| tar -xf - ${distname}/Modules/zlibmodule.c"
 post-extract {
 	file copy	${filespath}/setup.py ${worksrcpath}
diff --unidirectional-new-file -ru -x PortIndex ports.orig/x11/gtk2/Portfile ports/x11/gtk2/Portfile
--- ports.orig/x11/gtk2/Portfile	2008-04-28 21:30:07.000000000 -0600
+++ ports/x11/gtk2/Portfile	2008-05-01 09:20:13.000000000 -0600
@@ -32,6 +32,10 @@
     default_variants    +x11
 }
 
+if {[variant_isset universal]} {
+    configure.env-append    CUPS_CONFIG="${configure.universal_sysroot}/usr/bin/cups-config"
+}
+
 pre-fetch {
     if {![variant_isset quartz] && ![variant_isset x11]} {
         error "Either +x11 or +quartz is required"
